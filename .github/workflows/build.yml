# GitHub工作流配置
name: 构建Windows和Mac可执行程序

on:
  push:
    # 暂时允许所有推送都触发构建
    # tags:
    #   - 'v*'  # 当推送带v开头的tag时触发，例如v1.0.0
    
permissions:
  contents: write # 允许工作流创建release和上传文件

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3
      
      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pillow
          pip install -r requirements.txt
          
      - name: 构建Windows可执行文件
        run: |
          # 优先使用spec文件打包
          if (Test-Path -Path "excel-app.spec") {
              pyinstaller --noconfirm excel-app.spec
          } else {
              # 如果spec文件不存在，使用命令行参数
              pyinstaller --onefile --windowed --name "报表小助手" excel_ui.py
          }
      
      - name: 上传Windows构建结果
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist\报表小助手.exe
  
  build-mac:
    runs-on: macos-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3
      
      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pillow
          pip install -r requirements.txt
          
      - name: 构建Mac可执行文件 
        run: |
          if [ -f "excel-app.spec" ]; then
            sed -i '' 's/报表小助手/ExcelHelper/g' excel-app.spec
            pyinstaller --noconfirm excel-app.spec
          else
            pyinstaller --onefile --windowed --name "ExcelHelper" excel_ui.py
          fi
          
          echo "构建结果:"
          ls -la dist/
          
      - name: 准备Mac应用包
        run: |
          mkdir -p mac_app/报表小助手.app/Contents/MacOS
          mkdir -p mac_app/报表小助手.app/Contents/Resources
          
          if [ -f "dist/ExcelHelper" ]; then
            cp dist/ExcelHelper mac_app/报表小助手.app/Contents/MacOS/ExcelHelper
          else
            EXEC_FILE=$(find dist -type f -not -name "*.py" -not -name "*.pyc" | head -1)
            if [ -n "$EXEC_FILE" ]; then
              cp "$EXEC_FILE" mac_app/报表小助手.app/Contents/MacOS/ExcelHelper
            else
              echo "错误: 无法找到可执行文件"
              exit 1
            fi
          fi
          
          chmod +x mac_app/报表小助手.app/Contents/MacOS/ExcelHelper
          
      - name: 创建Info.plist文件
        working-directory: mac_app/报表小助手.app/Contents
        run: |
          cat > Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleDisplayName</key>
            <string>报表小助手</string>
            <key>CFBundleExecutable</key>
            <string>ExcelHelper</string>
            <key>CFBundleIdentifier</key>
            <string>com.yourcompany.excelhelper</string>
            <key>CFBundleInfoDictionaryVersion</key>
            <string>6.0</string>
            <key>CFBundleName</key>
            <string>报表小助手</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>NSPrincipalClass</key>
            <string>NSApplication</string>
          </dict>
          </plist>
          EOF
          
      - name: 打包Mac应用
        working-directory: mac_app
        run: |
          zip -r 报表小助手-Mac.zip 报表小助手.app
      
      - name: 上传Mac构建结果
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: mac_app/报表小助手-Mac.zip
  
  release:
    needs: [build-windows, build-mac]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: 下载Windows构建产物
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./windows-build
      
      - name: 下载Mac构建产物
        uses: actions/download-artifact@v4
        with:
          name: mac-build
          path: ./mac-build
      
      - name: 创建Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows-build/报表小助手.exe
            ./mac-build/报表小助手-Mac.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        