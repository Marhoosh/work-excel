# .gitee/workflows/build.yml
name: 构建Windows和Mac可执行程序

on:
  push:
    # tags:
    #   - 'v*'  # 当推送带v开头的tag时触发，例如v1.0.0

jobs:
  build-windows:
    runs-on: windows  
    steps:
      - name: 拉取代码
        uses: actions/checkout@v2
      
      - name: 设置Python环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          
      - name: 构建Windows可执行文件
        run: |
          pyinstaller --onefile --windowed --name program-win your_main_script.py
          
      - name: 上传构建结果
        uses: actions/upload-artifact@v2
        with:
          name: windows-build
          path: dist/program-win.exe
  
  build-mac:
    runs-on: macos
    steps:
      - name: 拉取代码
        uses: actions/checkout@v2
      
      - name: 设置Python环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          
      - name: 构建Mac可执行文件 
        run: |
          pyinstaller --onefile --windowed --name program-mac your_main_script.py
          
      - name: 上传构建结果
        uses: actions/upload-artifact@v2
        with:
          name: mac-build
          path: dist/program-mac

  release:
    needs: [build-windows, build-mac]
    runs-on: ubuntu-latest
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v2
        with:
          path: ./builds
          
      - name: 创建Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./builds/windows-build/program-win.exe,./builds/mac-build/program-mac"
          token: ${{ secrets.GITEE_TOKEN }}
          tag: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: 设置版本号
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        